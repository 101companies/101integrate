delimiters "<", ">"

template(args) ::=<<
<buildPopularTermsTable(args)>
>>


topFrequency(book) ::=<<
"topFrequency<book>"
>>
frequency(book) ::=<<
"frequency<book>"
>>
quotedBook(book) ::=<<
"<book>"
>>

topFrequencies(books,sep) ::=<< 
<books:{x|<topFrequency(x)>}; separator="<sep>">
>>

frequencies(books,sep) ::=<<
<books:{x|<frequency(x)>}; separator="<sep>">
>>

quotedBooks(books,sep) ::=<<
<books:{x|<quotedBook(x)>}; separator="<sep>">
>>

buildPopularTermsTable(books)  ::=<<
library("xtable")

dataRoot \<- "../../data"

<books:
{book|
<topFrequency(book)> \<- read.csv(paste(dataRoot, "/perbook/", <quotedBook(book)>,"/topFrequency.csv", sep=""))

<frequency(book)> \<- read.csv(paste(dataRoot, "/perbook/", <quotedBook(book)>,"/frequenciesMerged.csv", sep=""), sep=";")

<frequency(book)> \<- subset(<frequency(book)>, select=c(0,3))
}>

#take union of TOP terms across all books
all \<- rbind(<topFrequencies(books,",")>)
union \<- data.frame(sort(unique(all\$Term), decreasing = FALSE))
names(union) \<- c("Term")
v \<- data.frame(vector(mode = "integer",length(union\$Term)),stringsAsFactors = FALSE) 

#initialize columns per book with default values
<books:{book|
union \<- cbind(union, v)
}>

names(union) \<- c("Term", <quotedBooks(books,",")>)
row.names(union) \<- seq(nrow(union))
union\$Term \<- as.character(union\$Term)
union \<- union[with(union, order(union\$Term)),]

<books:
{book|
for(t in union\$Term) if(t %in% as.vector(<frequency(book)>\$Term)) union[which(union\$Term == t),2] \<- <frequency(book)>[which(<frequency(book)>\$Term == t),2]
}>

write.csv(union, paste(dataRoot, "/allbooks/", "/unionTopFrequencies.csv", sep=""))

#print(xtable(union, label=paste('F:unionTopFrequencies', sep = ""), caption="Union of TOP 30 frequent terms from the books"),
#      file="unionTopFrequencies.tex", scalebox=0.7,
#      include.rownames=FALSE,  
#      rotate.colnames=FALSE)

#- One column per book showing popularity per book in a percentile-based manner:
#* empty cell = no occurrence in the given book
#* dot = frequency is 1
#* small circle = below median but larger than 1
#* big circle = greater or above median
#* biggest circle = in the top-n

<books:
{book|
q<book> \<- as.vector(quantile(union\$<book>))
q<book>Median = q<book>[3]
}>


<toTexEsc()>

<books:
{book|
<book>Column \<- toTex(union\$<book>, q<book>Median)
}>

res \<- cbind(union\$Term)

<books:
{book|
res \<- cbind(res, data.frame(<book>Column))
}>


names(res) \<- c("Term",<quotedBooks(book,",")>)



#print(xtable(res, label=paste('F:unionTopFrequenciesVisual', sep = ""), 
#             caption="Union of TOP 30 frequent terms from the books. empty cell - no occurrence in the given book.
#        \\oneDot{} -- frequency is 1.
#        \\belowMdot{} -- below median but larger than 1.
#        \\greaterMdot{} -- greater or above median.
#        \\ensuremath{\\topNdot{}} -- in the top 5.", latex.environment="center"),
#      file="unionTopFrequenciesVisual.tex",
#      sanitize.text.function = function(x){x},
#      scalebox=0.8, include.rownames=FALSE,  
#      rotate.colnames=FALSE)

write.csv(res, paste(dataRoot, "/allbooks/", "unionTopFrequenciesVisual.csv", sep=""), row.names=FALSE)
>>

toTex() ::= <<
\toTex \<- function(column, M){
  r \<- vector()
  topN \<- sort(as.vector(column), decreasing = TRUE)[5]
  for(v in column){
    c \<- as.integer(v)
    if
      (c == 0){
	r \<- c(r, "\\emptyDot{}")
    } else if
      (c == 1){
	r \<- c(r, "\\oneDot{}")
    } else if 
      ((c \< M) & (c \> 0)){
	r \<- c(r, "\\belowMdot{}")
    } else if 
      ((c \>= M) & (c \< topN)) {
	 r \<- c(r, "\\greaterMdot")
    } else { 
	 r \<- c(r, "\\topNdot{}") 
    }
  }
 r
}
>>

toTexEsc() ::= <<
<\u005c>toTex <\u003C><\u002D> function<\u0028>column<\u002C> M<\u0029><\u007B>
  r <\u003C><\u002D> vector<\u0028><\u0029>
  topN <\u003C><\u002D> sort<\u0028>as<\u002E>vector<\u0028>column<\u0029><\u002C> decreasing <\u003D> TRUE<\u0029><\u005B>5<\u005D>
  for<\u0028>v in column<\u0029><\u007B>
    c <\u003C><\u002D> as<\u002E>integer<\u0028>v<\u0029>
    if<\u0028>c <\u003D><\u003D> 0<\u0029><\u007B>
      r <\u003C><\u002D> c<\u0028>r<\u002C> <\u0022><\u005C><\u005C>emptyDot<\u007B><\u007D><\u0022><\u0029>
    <\u007D> else if<\u0028>c <\u003D><\u003D> 1<\u0029><\u007B>
      r <\u003C><\u002D> c<\u0028>r<\u002C> <\u0022><\u005C><\u005C>oneDot<\u007B><\u007D><\u0022><\u0029>
    <\u007D> else if <\u0028><\u0028>c <\u003C> M<\u0029> & <\u0028>c <\u003E> 0<\u0029><\u0029><\u007B>
      r <\u003C><\u002D> c<\u0028>r<\u002C> <\u0022><\u005C><\u005C>belowMdot<\u007B><\u007D><\u0022><\u0029>
    <\u007D> else if <\u0028><\u0028>c <\u003E><\u003D> M<\u0029> & <\u0028>c <\u003E> topN<\u0029><\u0029> <\u007B>
      r <\u003C><\u002D> c<\u0028>r<\u002C> <\u0022><\u005C><\u005C>greaterMdot<\u0022><\u0029>
    <\u007D> else r <\u003C><\u002D> c<\u0028>r<\u002C> <\u0022><\u005C><\u005C>topNdot<\u007B><\u007D><\u0022><\u0029>
  <\u007D>
 r
<\u007D>
>>