<table align=middle style="border: 0.5px solid black; border-spacing: 0px;">
<tr style="height:190px;"><th style="border: 1px solid black; -webkit-transform:">Contribution/Term</th>
<%
lowerMapped = map(lambda l: l.lower(), mappedTerms)
%>
% for contribName in sorted(contribs):
	<%
	mappedLevel0 = filter(lambda x: x.lower() in lowerMapped, set(level0Links[contribName]))
	mappedLevel1 = filter(lambda x: x.lower() in lowerMapped and not x.lower() in mappedLevel0, set(level1Links[contribName]))
	%>
	<th style="border: 1px solid black; vertical-align:top; padding-top: 3px;">
		<span align="right" style="display: inline-block; width: 22px;white-space: nowrap; -webkit-transform: rotate(90deg);">
			${contribName} (${str(len(mappedLevel0))}/${str(len(mappedLevel1))})
		</span>
	</th>
% endfor
</tr>
%  for term in sorted(mappedTerms):
	<%
	level0 = filter(lambda c: term.lower() in level0Links[c] or term in level0Links[c], contribs)
	level1 = filter(lambda c: term.lower() in level1Links[c] or term in level1Links[c], contribs)
	%>
	<tr><td  style="border: 1px solid black;"><b>${term} (${str(len(level0))}/${str(len(level1))})</b></td>
	% for contribName in sorted(contribs):
		<td  align=middle style="border: 1px solid black;">
		% if term.lower() in level0Links[contribName] or term in level0Links[contribName]:
			&#9679;
		% elif term.lower() in level1Links[contribName] or term in level1Links[contribName]:
			<p style="font-size:9px;">&#9679;<p>
		% endif
		</td>
	% endfor
	<tr>
% endfor
</table>
